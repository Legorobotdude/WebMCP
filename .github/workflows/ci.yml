name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # lint:
    # name: Lint
    # runs-on: ubuntu-latest
    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v4

    #   - name: Setup PNPM
    #     uses: pnpm/action-setup@v4

    #   - name: Setup Node.js
    #     uses: actions/setup-node@v4
    #     with:
    #       node-version: 22
    #       cache: 'pnpm'

    #   - name: Install dependencies
    #     run: pnpm install --frozen-lockfile --ignore-scripts

    #   - name: Build shared packages
    #     run: pnpm build:shared

    #   - name: Run linter check
    #     run: pnpm lint:check

  # typecheck:
  #   name: Type Check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup PNPM
  #       uses: pnpm/action-setup@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #         cache: 'pnpm'

  #     - name: Install dependencies (ignore scripts)
  #       run: pnpm install --frozen-lockfile --ignore-scripts

  #     - name: Build packages first
  #       run: pnpm build:shared

  #     - name: Run postinstall scripts
  #       run: pnpm rebuild

  #     - name: Build all projects (to generate required files)
  #       run: pnpm build

  #     - name: Run type check
  #       run: pnpm typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: []
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies (ignore scripts)
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build packages first
        run: pnpm build:shared

      - name: Run postinstall scripts
        run: pnpm rebuild

      - name: Build everything
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            shared/*/dist
            apps/extension/.output
            apps/backend/dist
            apps/native-server/dist

  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   needs: [typecheck]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup PNPM
  #       uses: pnpm/action-setup@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #         cache: 'pnpm'

  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile --ignore-scripts

  #     - name: Build shared packages
  #       run: pnpm build:shared

  #     - name: Run postinstall scripts
  #       run: pnpm rebuild

  #     - name: Run tests
  #       run: pnpm test

  check-format:
    name: Check Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies (ignore scripts)
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build packages first
        run: pnpm build:shared

      - name: Run postinstall scripts
        run: pnpm rebuild

      - name: Check formatting
        run: pnpm format:check

  # E2E tests run separately as they need the extension built
  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build shared packages
        run: pnpm build:shared

      - name: Run postinstall scripts
        run: pnpm rebuild

      - name: Build extension and apps
        run: pnpm build:apps

      - name: Install Playwright browsers
        run: pnpm --filter @mcp-b/e2e-tests exec playwright install chromium

      - name: Run E2E tests
        run: pnpm test:e2e

  # Summary job to require all checks to pass
  # This is useful for branch protection rules
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [build, check-format, e2e-test]
    if: always()
    steps:
      - name: Check if all jobs succeeded
        run: |
          if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            echo "One or more jobs failed"
            exit 1
          fi
          echo "All jobs succeeded!"