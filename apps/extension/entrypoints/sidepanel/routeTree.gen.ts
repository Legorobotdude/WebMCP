/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root';
import { Route as IndexRouteImport } from './routes/index';
import { Route as UserscriptsIndexRouteImport } from './routes/userscripts.index';
import { Route as McpIndexRouteImport } from './routes/mcp.index';
import { Route as ChatIndexRouteImport } from './routes/chat.index';
import { Route as UserscriptsNewRouteImport } from './routes/userscripts.new';
import { Route as UserscriptsScriptIdRouteImport } from './routes/userscripts.$scriptId';
import { Route as UserscriptsScriptIdEditRouteImport } from './routes/userscripts.$scriptId.edit';

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any);
const UserscriptsIndexRoute = UserscriptsIndexRouteImport.update({
  id: '/userscripts/',
  path: '/userscripts/',
  getParentRoute: () => rootRouteImport,
} as any);
const McpIndexRoute = McpIndexRouteImport.update({
  id: '/mcp/',
  path: '/mcp/',
  getParentRoute: () => rootRouteImport,
} as any);
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport,
} as any);
const UserscriptsNewRoute = UserscriptsNewRouteImport.update({
  id: '/userscripts/new',
  path: '/userscripts/new',
  getParentRoute: () => rootRouteImport,
} as any);
const UserscriptsScriptIdRoute = UserscriptsScriptIdRouteImport.update({
  id: '/userscripts/$scriptId',
  path: '/userscripts/$scriptId',
  getParentRoute: () => rootRouteImport,
} as any);
const UserscriptsScriptIdEditRoute = UserscriptsScriptIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => UserscriptsScriptIdRoute,
} as any);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/userscripts/$scriptId': typeof UserscriptsScriptIdRouteWithChildren;
  '/userscripts/new': typeof UserscriptsNewRoute;
  '/chat': typeof ChatIndexRoute;
  '/mcp': typeof McpIndexRoute;
  '/userscripts': typeof UserscriptsIndexRoute;
  '/userscripts/$scriptId/edit': typeof UserscriptsScriptIdEditRoute;
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/userscripts/$scriptId': typeof UserscriptsScriptIdRouteWithChildren;
  '/userscripts/new': typeof UserscriptsNewRoute;
  '/chat': typeof ChatIndexRoute;
  '/mcp': typeof McpIndexRoute;
  '/userscripts': typeof UserscriptsIndexRoute;
  '/userscripts/$scriptId/edit': typeof UserscriptsScriptIdEditRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/': typeof IndexRoute;
  '/userscripts/$scriptId': typeof UserscriptsScriptIdRouteWithChildren;
  '/userscripts/new': typeof UserscriptsNewRoute;
  '/chat/': typeof ChatIndexRoute;
  '/mcp/': typeof McpIndexRoute;
  '/userscripts/': typeof UserscriptsIndexRoute;
  '/userscripts/$scriptId/edit': typeof UserscriptsScriptIdEditRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/userscripts/$scriptId'
    | '/userscripts/new'
    | '/chat'
    | '/mcp'
    | '/userscripts'
    | '/userscripts/$scriptId/edit';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/userscripts/$scriptId'
    | '/userscripts/new'
    | '/chat'
    | '/mcp'
    | '/userscripts'
    | '/userscripts/$scriptId/edit';
  id:
    | '__root__'
    | '/'
    | '/userscripts/$scriptId'
    | '/userscripts/new'
    | '/chat/'
    | '/mcp/'
    | '/userscripts/'
    | '/userscripts/$scriptId/edit';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  UserscriptsScriptIdRoute: typeof UserscriptsScriptIdRouteWithChildren;
  UserscriptsNewRoute: typeof UserscriptsNewRoute;
  ChatIndexRoute: typeof ChatIndexRoute;
  McpIndexRoute: typeof McpIndexRoute;
  UserscriptsIndexRoute: typeof UserscriptsIndexRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/userscripts/': {
      id: '/userscripts/';
      path: '/userscripts';
      fullPath: '/userscripts';
      preLoaderRoute: typeof UserscriptsIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/mcp/': {
      id: '/mcp/';
      path: '/mcp';
      fullPath: '/mcp';
      preLoaderRoute: typeof McpIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/chat/': {
      id: '/chat/';
      path: '/chat';
      fullPath: '/chat';
      preLoaderRoute: typeof ChatIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/userscripts/new': {
      id: '/userscripts/new';
      path: '/userscripts/new';
      fullPath: '/userscripts/new';
      preLoaderRoute: typeof UserscriptsNewRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/userscripts/$scriptId': {
      id: '/userscripts/$scriptId';
      path: '/userscripts/$scriptId';
      fullPath: '/userscripts/$scriptId';
      preLoaderRoute: typeof UserscriptsScriptIdRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/userscripts/$scriptId/edit': {
      id: '/userscripts/$scriptId/edit';
      path: '/edit';
      fullPath: '/userscripts/$scriptId/edit';
      preLoaderRoute: typeof UserscriptsScriptIdEditRouteImport;
      parentRoute: typeof UserscriptsScriptIdRoute;
    };
  }
}

interface UserscriptsScriptIdRouteChildren {
  UserscriptsScriptIdEditRoute: typeof UserscriptsScriptIdEditRoute;
}

const UserscriptsScriptIdRouteChildren: UserscriptsScriptIdRouteChildren = {
  UserscriptsScriptIdEditRoute: UserscriptsScriptIdEditRoute,
};

const UserscriptsScriptIdRouteWithChildren = UserscriptsScriptIdRoute._addFileChildren(
  UserscriptsScriptIdRouteChildren
);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  UserscriptsScriptIdRoute: UserscriptsScriptIdRouteWithChildren,
  UserscriptsNewRoute: UserscriptsNewRoute,
  ChatIndexRoute: ChatIndexRoute,
  McpIndexRoute: McpIndexRoute,
  UserscriptsIndexRoute: UserscriptsIndexRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
